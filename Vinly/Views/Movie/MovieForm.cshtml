@model Vinly.ViewModels.NewMovieViewModel

@{
    ViewBag.Title = "MovieForm";
}

<h2>@Model.PageTitle</h2>

@using (Html.BeginForm("Save", "Movie"))
{
    @Html.ValidationSummary(true, "Please fix the following Errors")
    //true is give to not to show the model errors at top

    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ReleaseDate)
        @Html.TextBoxFor(m => m.ReleaseDate, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ReleaseDate)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.MovieGenreId)
        @Html.DropDownListFor(m => m.MovieGenreId, new SelectList(Model.Genre, "Id", "Name"), "Select Movie Type", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.MovieGenreId)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.NumberInStock)
        @Html.TextBoxFor(m => m.NumberInStock, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.NumberInStock)
    </div>

    @Html.HiddenFor(m => m.Id)
    @Html.AntiForgeryToken()//add a encripted token for validation
    <button type="submit" class="btn btn-primary">Save</button>

}
@section scripts
{

    @Scripts.Render("~/bundles/jqueryval")

}